version: "3"

vars:
  package_path: "cli/flow"
  bin_dir: "{{.HOME}}/bin"
  bin_name: "fs"
  alias_name: "flow"
  flow_release_path: "{{.package_path}}/.build/release/flow"

tasks:
  flow:
    desc: Run the Swift Flow CLI (passes CLI args through).
    silent: true
    cmds:
      - |
        set -euo pipefail
        swift run --package-path "{{.package_path}}" flow -- {{.CLI_ARGS}}

  default:
    desc: List available tasks.
    silent: true
    cmds:
      - |
        task --list

  dev:
    desc: Alias for `task flow`.
    silent: true
    cmds:
      - |
        set -euo pipefail
        task flow -- {{.CLI_ARGS}}

  deploy:
    desc: Build the Swift Flow CLI and install it to ~/bin/fs (with optional flow alias).
    silent: true
    cmds:
      - |
        set -euo pipefail
        swift build --package-path "{{.package_path}}" -c release
        mkdir -p "{{.bin_dir}}"
        cp "{{.flow_release_path}}" "{{.bin_dir}}/{{.bin_name}}"
        chmod +x "{{.bin_dir}}/{{.bin_name}}"
        if [ -n "{{.alias_name}}" ]; then
          ln -sf "{{.bin_dir}}/{{.bin_name}}" "{{.bin_dir}}/{{.alias_name}}"
        fi
        case ":${PATH}:" in
          *:"{{.bin_dir}}":*) ;;
          *)
            echo "Note: {{.bin_dir}} is not currently on PATH."
            echo "Add it for fish with: fish_add_path $HOME/bin"
            echo "Or for bash/zsh: export PATH=\"$HOME/bin:$PATH\""
            ;;
        esac

  setup:
    desc: Ensure Swift toolchain is installed and resolve package dependencies.
    silent: true
    cmds:
      - |
        set -euo pipefail
        if ! command -v swift >/dev/null 2>&1; then
          echo "Swift toolchain not found in PATH."
          echo "Install it from https://www.swift.org/download/"
          exit 1
        fi
        swift --version >/dev/null
        swift package resolve --package-path "{{.package_path}}" >/dev/null
        echo "setup complete"
